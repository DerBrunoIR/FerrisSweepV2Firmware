/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sl {
    release-after-ms = <2000>;
};

/ {
    behaviors {
        tbshift: tap_dance_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = "<&sk shift>,<&caps_word>";
        };
        
        tbspace: tab_dance_space_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SPACE_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = "<&kp space>, <&kp tab>";
        };
    };

    combos {
        compatible = "zmk,combos";

        ESC {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        ToSystem {
            bindings = <&sl 4>;
            key-positions = <0 30 3>;
        };

        ToSystem {
            bindings = <&sl 4>;
            key-positions = <9 33 6>;
        };

        ESC {
            bindings = <&kp ESC>;
            key-positions = <9 8>;
        };

        enableNavigationLayer {
            bindings = <&tog 3>;
            key-positions = <33 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
       &kp Q   &kp W   &kp E          &kp R     &kp T   &kp Z   &kp U      &kp I    &kp O      &kp P
       &kp A   &kp S   &kp D          &kp F     &kp G   &kp H   &kp J      &kp K    &kp L  &kp ENTER
 &mt LCTRL Y   &kp X   &kp C          &kp V     &kp B   &kp N   &kp M  &kp COMMA  &kp DOT   &tbshift
                              &kp BACKSPACE  &tbspace   &mo 1   &mo 2
            >;
        };

        NUMERIC {
            bindings = <
     &kp NUMBER_1   &kp NUMBER_2      &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5      &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
     &kp QUESTION       &kp PIPE             &none          &none         &none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp MINUS      &kp PLUS     &kp ENTER
 &kp LEFT_CONTROL  &kp LESS_THAN  &kp GREATER_THAN          &none         &none             &none      &kp BACKSLASH     &kp SLASH     &kp ASTRK      &tbshift
                                                    &kp BACKSPACE      &tbspace             &mo 0              &mo 2
            >;
        };

        SPECIAL {
            bindings = <
  &kp EXCL  &kp DOUBLE_QUOTES   &kp HASH     &kp DOLLAR  &kp PERCENT   &kp AMPERSAND        &kp SLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
    &kp AT   &kp SINGLE_QUOTE  &kp GRAVE          &none        &none  &kp LEFT_BRACE  &kp RIGHT_BRACE        &kp UNDERSCORE              &kp TILDE  &kp ENTER
 &kp LCTRL              &none      &none          &none        &none           &none            &none                 &none                  &none   &tbshift
                                          &kp BACKSPACE     &tbspace           &mo 0            &mo 1
            >;
        };

        SHORTCUTS {
            bindings = <
     &none       &none         &none          &none     &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5
 &sk LCTRL  &sk LSHIFT  &sk LEFT_ALT       &sk LWIN     &none         &kp C         &kp V      &kp LEFT     &kp RIGHT       &kp TAB
     &none       &none         &none          &none     &none         &kp X         &kp R         &none         &none      &tbshift
                                      &kp BACKSPACE  &tbspace         &mo 0         &mo 1
            >;
        };

        SYSTEM {
            bindings = <
           &reset        &bootloader   &none   &none   &none   &none   &none   &none   &bootloader        &reset
     &out OUT_USB       &out OUT_BLE   &none   &none   &none   &none   &none   &none  &out OUT_BLE  &out OUT_USB
 &ext_power EP_ON  &ext_power EP_OFF   &none   &none   &none   &none   &none   &none         &none         &none
                                               &none   &none   &none   &none
            >;
        };
    };
};
